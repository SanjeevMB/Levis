{{ 'levis-custom.css' | asset_url | stylesheet_tag }}

{% style %}
  .popup-container {
    overflow: scroll;
  }
  .popup-container:active body {
    overflow: hidden;
  }
  .popup-container {
    position: fixed;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -43%);
    width: 60vw;
    height: 90vh;
    background-color: white;
    z-index: 999999;
    display: none;
    padding: 50px;
    border: 2px solid red;
  } 
  .popup-container .close-button {
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 2;
    cursor: pointer;
    color: white;
    background-color: black;
    z-index: 9999999;
  }
{% endstyle %}

<div class="levis_product_static_container">
  <h2 class="product_heading_static">{{ section.settings.heading_text | upcase }}</h2>
  <div
    class="levis_product_static"
    data-flickity='
      { "groupCells": true,
        "contain": true,
        "prevNextButtons": false,
        "freeScroll": true,
        "pageDots": false
      }
    '
  >
    {% for product in section.settings.product_list %}
      <div class="product_item_static">
        {% render 'levis-product-card-snippet', product: product, sectionId: section.id %}
      </div>
      {{ product.variants | json }}
    {% endfor %}
    
  </div>
  <div class="popup-container">
    <div class="popup-content"></div>
    <button class="close-button">X</button>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    let popContainer = document.querySelector('.popup-container');
    let popContent = document.querySelector('.popup-content');
    let quickViewButtons = document.querySelectorAll('.quick_view');
    let productContainer = document.querySelector('.product_container');
    let closeButton = document.querySelector('.close-button');

    quickViewButtons.forEach((button) => {
      button.addEventListener('click', function (event) {
        event.preventDefault(); // Prevent the default behavior of the anchor tag
        const url = event.currentTarget.nextElementSibling.href;
        fetch(url)
          .then((response) => {
            if (!response.ok) {
              throw new Error(`Response error: ${response.statusText}`);
            }
            return response.text();
          })
          .then((html) => {
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            let pdp = doc.querySelector('.sanjeevPopup');
            popContent.appendChild(pdp);
            popContainer.style.display = 'block';
          })
          .catch((error) => {
            console.error(`Error fetching or parsing the page: ${error.message}`);
          });
      });
    });

    closeButton.addEventListener('click', function () {
      let pdp = document.querySelector('.sanjeevPopup');
      pdp.remove()
      popContainer.style.display = 'none';
      
    });
  });
</script>


{% schema %}
{
  "name": "Levis product card static",
  "tag": "section",
  "class": "levis_product_card",
  "settings": [
    {
      "type": "text",
      "id": "heading_text",
      "label": "Heading text"
    },
    {
      "type": "product_list",
      "id": "product_list",
      "label": "Select products"
    }
  ],
  "presets": [
    {
      "name": "Levis product card static"
    }
  ]
}
{% endschema %}
